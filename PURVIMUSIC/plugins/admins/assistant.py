import asyncio
from PURVIMUSIC.misc import SUDOERS
from pyrogram import filters
from PURVIMUSIC import app
import asyncio
from pyrogram import filters
from pyrogram.enums import ChatMemberStatus
from PURVIMUSIC import app
from PURVIMUSIC.utils.purvi_ban import admin_filter
from PURVIMUSIC.utils.database import get_assistant

links = {}


@app.on_message(
    filters.group
    & filters.command(["userbotjoin", f"userbotjoin@{app.username}"])
    & ~filters.private
)
async def join_group(client, message):
    chat_id = message.chat.id
    userbot = await get_assistant(message.chat.id)
    userbot_id = userbot.id
    done = await message.reply("<b>·¥ò ü·¥á·¥Äs·¥á ·¥°·¥Ä…™·¥õ …™…¥·¥†…™·¥õ…™…¥…¢ ·¥Äss…™s·¥õ·¥Ä…¥·¥õ</b>...")
    await asyncio.sleep(1)
    # Get chat member object
    chat_member = await app.get_chat_member(chat_id, app.id)

    # Condition 1: Group username is present, bot is not admin
    if (
        message.chat.username
        and not chat_member.status == ChatMemberStatus.ADMINISTRATOR
    ):
        try:
            await userbot.join_chat(message.chat.username)
            await done.edit_text("<b>‚úÖ ·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥ä·¥è…™…¥·¥á·¥Ö.</b>")
        except Exception as e:
            await done.edit_text("<b>…™ …¥·¥á·¥á·¥Ö ·¥Ä·¥Ö·¥ç…™…¥ ·¥ò·¥è·¥°·¥á Ä ·¥õ·¥è ·¥ú…¥ ô·¥Ä…¥ …™…¥·¥†…™·¥õ·¥á ·¥ç è ·¥Äss…™s·¥õ·¥Ä…¥·¥õ!</b>")

    # Condition 2: Group username is present, bot is admin, and Userbot is not banned
    if message.chat.username and chat_member.status == ChatMemberStatus.ADMINISTRATOR:
        try:
            await userbot.join_chat(message.chat.username)
            await done.edit_text("<b>‚úÖ ·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥ä·¥è…™…¥·¥á·¥Ö.</b>")
        except Exception as e:
            await done.edit_text(str(e))

    # Condition 3: Group username is not present/group is private, bot is admin and Userbot is banned
    if message.chat.username and chat_member.status == ChatMemberStatus.ADMINISTRATOR:
        userbot_member = await app.get_chat_member(chat_id, userbot.id)
        if userbot_member.status in [
            ChatMemberStatus.BANNED,
            ChatMemberStatus.RESTRICTED,
        ]:
            try:
                await app.unban_chat_member(chat_id, userbot.id)
                await done.edit_text("<b>·¥Äss…™s·¥õ·¥Ä…¥·¥õ …™s ·¥ú…¥ ô·¥Ä…¥…¥…™…¥…¢...</b>")
                await userbot.join_chat(message.chat.username)
                await done.edit_text(
                    "<b>·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥°·¥Äs  ô·¥Ä…¥…¥·¥á·¥Ö,  ô·¥ú·¥õ …¥·¥è·¥° ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö, ·¥Ä…¥·¥Ö ·¥ä·¥è…™…¥·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õ ‚úÖ</b>"
                )
            except Exception as e:
                await done.edit_text(
                    "<b>“ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è ·¥ä·¥è…™…¥, ·¥ò ü·¥á·¥Äs·¥á …¢…™·¥†·¥á  ô·¥Ä…¥ ·¥ò·¥è·¥°·¥á Ä ·¥Ä…¥·¥Ö …™…¥·¥†…™·¥õ·¥á ·¥ús·¥á Ä ·¥ò·¥è·¥°·¥á Ä ·¥è Ä ·¥ú…¥ ô·¥Ä…¥ ·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥ç·¥Ä…¥·¥ú·¥Ä ü ü è ·¥õ ú·¥á…¥ ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥  ô è /userbotjoin</b>"
                )
        return

    # Condition 4: Group username is not present/group is private, bot is not admin
    if (
        not message.chat.username
        and not chat_member.status == ChatMemberStatus.ADMINISTRATOR
    ):
        await done.edit_text("<b>…™ …¥·¥á·¥á·¥Ö ·¥Ä·¥Ö·¥ç…™…¥ ·¥ò·¥è·¥°·¥á Ä ·¥õ·¥è …™…¥·¥†…™·¥õ·¥á ·¥ç è ·¥Äss…™s·¥õ·¥Ä…¥·¥õ.</b>")

    # Condition 5: Group username is not present/group is private, bot is admin
    if (
        not message.chat.username
        and chat_member.status == ChatMemberStatus.ADMINISTRATOR
    ):
        try:
            try:
                userbot_member = await app.get_chat_member(chat_id, userbot.id)
                if userbot_member.status not in [
                    ChatMemberStatus.BANNED,
                    ChatMemberStatus.RESTRICTED,
                ]:
                    await done.edit_text("<b>‚úÖ ·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥ä·¥è…™…¥·¥á·¥Ö.</b>")
                    return
            except Exception as e:
                await done.edit_text("<b>·¥ò ü·¥á·¥Äs·¥á ·¥°·¥Ä…™·¥õ …™…¥·¥†…™·¥õ…™…¥…¢ ·¥Äss…™s·¥õ·¥Ä…¥·¥õ</b>.")
                await done.edit_text("<b>·¥ò ü·¥á·¥Äs·¥á ·¥°·¥Ä…™·¥õ …™…¥·¥†…™·¥õ…™…¥…¢ ·¥Äss…™s·¥õ·¥Ä…¥·¥õ</b>...")
                invite_link = await app.create_chat_invite_link(
                    chat_id, expire_date=None
                )
                await asyncio.sleep(2)
                await userbot.join_chat(invite_link.invite_link)
                await done.edit_text("<b>‚úÖ ·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥ä·¥è…™…¥·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è.</b>")
        except Exception as e:
            await done.edit_text(
                f"<b>‚ûª ·¥Ä·¥Ñ·¥õ·¥ú·¥Ä ü ü è …™ “ì·¥è·¥ú…¥·¥Ö ·¥õ ú·¥Ä·¥õ ·¥ç è ·¥Äss…™s·¥õ·¥Ä…¥·¥õ  ú·¥Äs …¥·¥è·¥õ ·¥ä·¥è…™…¥ ·¥õ ú…™s …¢ Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥Ö …™ ·¥Ä·¥ç …¥·¥è·¥õ ·¥Ä ô ü·¥á ·¥õ·¥è …™…¥·¥†…™·¥õ·¥á ·¥ç è ·¥Äss…™s·¥õ·¥Ä…¥·¥õ  ô·¥á·¥Ñ·¥Ä·¥ús·¥á [ …™ ·¥Ö·¥è…¥·¥õ  ú·¥Ä·¥†·¥á  …™…¥·¥†…™·¥õ·¥á ·¥ús·¥á Ä ·¥Ä·¥Ö·¥ç…™…¥ ·¥ò·¥è·¥°·¥á Ä ] s·¥è ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ç·¥á …™…¥·¥†…™·¥õ·¥á ·¥ús·¥á Äs ·¥Ä·¥Ö·¥ç…™…¥ ·¥ò·¥è·¥°·¥á Ä ·¥õ ú·¥á…¥ ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥  ô è- /userbotjoin.</b>\n\n<b>‚û• …™·¥Ö ¬ª</b> @{userbot.username}"
            )

    # Condition 6: Group username is not present/group is private, bot is admin and Userbot is banned
    if (
        not message.chat.username
        and chat_member.status == ChatMemberStatus.ADMINISTRATOR
    ):
        userbot_member = await app.get_chat_member(chat_id, userbot.id)
        if userbot_member.status in [
            ChatMemberStatus.BANNED,
            ChatMemberStatus.RESTRICTED,
        ]:
            try:
                await app.unban_chat_member(chat_id, userbot.id)
                await done.edit_text(
                    "<b>·¥Äss…™s·¥õ·¥Ä…¥·¥õ …™s ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö</b>\n<b>·¥õ è·¥ò·¥á ·¥Ä…¢·¥Ä…™…¥:- /userbotjoin.</b>"
                )
                invite_link = await app.create_chat_invite_link(
                    chat_id, expire_date=None
                )
                await asyncio.sleep(2)
                await userbot.join_chat(invite_link.invite_link)
                await done.edit_text(
                    "<b>·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥°·¥Äs  ô·¥Ä…¥…¥·¥á·¥Ö, …¥·¥è·¥° ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö, ·¥Ä…¥·¥Ö ·¥ä·¥è…™…¥·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õ ‚úÖ</b>"
                )
            except Exception as e:
                await done.edit_text(
                    f"<b>‚ûª ·¥Ä·¥Ñ·¥õ·¥ú·¥Ä ü ü è …™ “ì·¥è·¥ú…¥·¥Ö ·¥õ ú·¥Ä·¥õ ·¥ç è ·¥Äss…™s·¥õ·¥Ä…¥·¥õ …™s  ô·¥Ä…¥…¥·¥á·¥Ö …™…¥ ·¥õ ú…™s …¢ Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥Ö …™ ·¥Ä·¥ç …¥·¥è·¥õ ·¥Ä ô ü·¥á ·¥õ·¥è ·¥ú…¥ ô·¥Ä…¥ ·¥ç è ·¥Äss…™s·¥õ·¥Ä…¥·¥õ  ô·¥á·¥Ñ·¥Ä·¥ús·¥á [ …™ ·¥Ö·¥è…¥·¥õ  ú·¥Ä·¥†·¥á   ô·¥Ä…¥ ·¥ò·¥è·¥°·¥á Ä ] s·¥è ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ç·¥á  ô·¥Ä…¥ ·¥ò·¥è·¥°·¥á Ä ·¥è Ä ·¥ú…¥ ô·¥Ä…¥ ·¥ç è ·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥ç·¥Ä…¥·¥ú·¥Ä ü ü è ·¥õ ú·¥á…¥ ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥  ô è- /userbotjoin.</b>\n\n<b>‚û• …™·¥Ö ¬ª<b/> @{userbot.username}"
                )
        return


@app.on_message(filters.command("userbotleave") & filters.group & admin_filter)
async def leave_one(client, message):
    try:
        userbot = await get_assistant(message.chat.id)
        await userbot.leave_chat(message.chat.id)
        await app.send_message(
            message.chat.id, "<b>‚úÖ ·¥ús·¥á Ä ô·¥è·¥õ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è  ü·¥á“ì·¥õ ·¥õ ú…™s Chat.</b>"
        )
    except Exception as e:
        print(e)


@app.on_message(filters.command(["leaveall", f"leaveall@{app.username}"]) & SUDOERS)
async def leave_all(client, message):
    if message.from_user.id not in SUDOERS:
        return

    left = 0
    failed = 0
    lol = await message.reply("üîÑ <b>·¥ús·¥á Ä ô·¥è·¥õ</b>  ü·¥á·¥Ä·¥†…™…¥…¢ ·¥Ä ü ü ·¥Ñ ú·¥Ä·¥õs !")
    try:
        userbot = await get_assistant(message.chat.id)
        async for dialog in userbot.get_dialogs():
            if dialog.chat.id == -1001733534088:
                continue
            try:
                await userbot.leave_chat(dialog.chat.id)
                left += 1
                await lol.edit(
                    f"<b>·¥ús·¥á Ä ô·¥è·¥õ  ü·¥á·¥Ä·¥†…™…¥…¢ ·¥Ä ü ü …¢ Ä·¥è·¥ú·¥ò...</b>\n\n<b> ü·¥á“ì·¥õ:</b> {left} ·¥Ñ ú·¥Ä·¥õs.\n<b>“ì·¥Ä…™ ü·¥á·¥Ö:</b> {failed} ·¥Ñ ú·¥Ä·¥õs."
                )
            except BaseException:
                failed += 1
                await lol.edit(
                    f"<b>·¥ús·¥á Ä ô·¥è·¥õ  ü·¥á·¥Ä·¥†…™…¥…¢...</b>\n\n<b> ü·¥á“ì·¥õ:</b> {left} chats.\n<b>“ì·¥Ä…™ ü·¥á·¥Ö:</b> {failed} chats."
                )
            await asyncio.sleep(3)
    finally:
        await app.send_message(
            message.chat.id,
            f"<b>‚úÖ  ü·¥á“ì·¥õ “ì Ä·¥è·¥ç:</b> {left} chats.\n<b>‚ùå “ì·¥Ä…™ ü·¥á·¥Ö …™…¥:</b> {failed} chats.",
  )
